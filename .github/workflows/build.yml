name: "Build"
on:
  pull_request:
    paths-ignore:
      - '.txt'
      - '*.MD'
      - '*.md'
      - 'LICENSE'
      - 'docs/**'
  push:
    branches:
      - master
      - develop
      - release/*
    tags-ignore:
      - '*'
    paths-ignore:
      - '.txt'
      - '*.MD'
      - '*.md'
      - 'LICENSE'
      - 'docs/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [15]
    steps: 
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          architecture: x64
      - name: Cache Maven packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn clean install
      - name: Run IQ evaluate action
        id: evaluate
        uses: sonatype-nexus-community/iq-github-action@v2.1.0
        with:
          iq-server-url: https://als.pagekite.me/
          username: admin
          password: admin1234
          application-id: Java-Github-Webgoat__steffessonatype
          scan-targets: .
      # Print out the results
      - name: Log evaluate action output
        run: echo "${{ steps.evaluate.outputs.scan-id }} ${{ steps.evaluate.outputs.report-url }}"


